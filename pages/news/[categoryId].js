import React from "react";

const CategoryNews = ({ newsList, category }) => {
  return (
    <div>
      <h1>{category} Category News</h1>
      {newsList.news.map((item, i) => {
        return (
          <span key={item.id}>
            {i} - {item.headline}
          </span>
        );
      })}
    </div>
  );
};

export default CategoryNews;

export async function getServerSideProps(context) {

  // Here this context object similar to one in getStaticPaths() which contains information about the incoming request , like req / res object , params object containing the route parameters for the current request if your page has dynamic routes , query object containing the query parameters for the current request 
  const { params , req, res, query } = context;

  // Here this req / res obejct is similar to one in express JS , req contains information about the incoming request, such as headers, cookies and res can be used to set custom response headers apart from one response is always component JSX in HTML format

  console.log(req.headers.cookie)

  res.setHeader('Set-Cookie',['name=aman'])   // Setting Cookie here wil set it in HTML generated by SSR

  console.log(query)  // query object is used to grab query string present in url apart from dynamic param only

  const response = await fetch(
    `https://fakenews.squirro.com/news/${params.categoryId}`
  );
  const data = await response.json();
  return {
    props: {
      newsList: data,
      category: params.categoryId,
    },
  };
}

// Now using SSR we will pre-render page at runtime for dynamic route as well where page is generated based on category parameter coming from route
